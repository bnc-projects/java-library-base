plugins {
    id 'eclipse'
    id 'idea'
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'maven-publish'
    id "org.sonarqube" version "2.8"
    id "com.github.spotbugs" version "2.0.1"
    id "com.bnc.gradle.travis-ci-versioner" version "1.1.0"
}

group = 'com.bnc'
sourceCompatibility = JavaVersion.VERSION_13
targetCompatibility = JavaVersion.VERSION_13
compileJava.options.encoding = "UTF-8"

ext {
    awsAccessKeyId = properties.containsKey('AWS_ACCESS_KEY_ID') ? AWS_ACCESS_KEY_ID : System.getenv('AWS_ACCESS_KEY_ID')
    awsSecretAccessKey = properties.containsKey('AWS_SECRET_ACCESS_KEY') ? AWS_SECRET_ACCESS_KEY : System.getenv('AWS_SECRET_ACCESS_KEY')
    awsSessionToken = System.getenv('AWS_SESSION_TOKEN')
}

travisVersioner {
    major 0
    minor 0
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "s3://artifact.bravenewcoin.com/maven/release"
        credentials(AwsCredentials) {
            accessKey "${awsAccessKeyId}"
            secretKey "${awsSecretAccessKey}"
            if (awsSessionToken) {
                sessionToken "${awsSessionToken}"
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url "s3://artifact.bravenewcoin.com/maven/${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}"
            credentials(AwsCredentials) {
                accessKey "${awsAccessKeyId}"
                secretKey "${awsSecretAccessKey}"
                if (awsSessionToken) {
                    sessionToken "${awsSessionToken}"
                }
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "${rootProject.name}"
    }
}
spotbugs {
    toolVersion = '4.0.0-beta4'
    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

jacoco {
    toolVersion = "0.8.5"
}

checkstyle {
    toolVersion '8.23'
    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.14.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.1.0'
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.5.2'
}
